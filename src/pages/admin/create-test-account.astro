---
// src/pages/admin/create-test-account.astro
import AdminLayout from "../../components/admin/AdminLayout.astro";
import { getSession } from "../../utils/auth";
import { supabase } from "../../lib/supabase";

const session = await getSession(Astro);
if (!session) {
  return Astro.redirect("/admin/signin");
}

// Check if current user is admin
const { data: profile } = await supabase
  .from("profile")
  .select("role")
  .eq("user_id", session.data.session.user.id)
  .single();

if (profile?.role !== "admin") {
  return Astro.redirect("/admin/dashboard");
}

---

<AdminLayout title="Create Test Account" session={session}>
  <div class="mx-auto max-w-2xl">
    <h1 class="mb-8 text-2xl font-bold">Create Test Account</h1>

    <form id="createTestAccount" class="space-y-6">
      <div>
        <label class="block text-sm font-medium text-gray-700">Email</label>
        <input
          type="email"
          name="email"
          required
          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500"
        />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700">Password</label>
        <input
          type="password"
          name="password"
          required
          minlength="6"
          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500"
        />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700">Full Name</label>
        <input
          type="text"
          name="fullName"
          required
          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500"
        />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700">Role</label>
        <select
          name="role"
          required
          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-indigo-500"
        >
          <option value="admin">Admin</option>
          <option value="editor">Editor</option>
          <option value="author">Author</option>
          <option value="viewer">Viewer</option>
        </select>
      </div>

      <div>
        <button
          type="submit"
          class="w-full rounded-md bg-indigo-600 px-4 py-2 text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
        >
          Create Account
        </button>
      </div>
    </form>
  </div>
</AdminLayout>

<script>
  const form = document.getElementById("createTestAccount") as HTMLFormElement;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);

    try {
      const response = await fetch("/api/auth/create-test-account", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          email: formData.get("email"),
          password: formData.get("password"),
          fullName: formData.get("fullName"),
          role: formData.get("role"),
        }),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || "Failed to create test account");
      }

      alert("Test account created successfully!");
      form.reset();
    } catch (error) {
      if (error instanceof Error) {
        alert(error.message);
      } else {
        alert("An unknown error occurred");
      }
    }
  });
</script>