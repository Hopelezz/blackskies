---
// components/admin/PostsTable.astro
import type { Post } from "../../types/post";

export interface Props {
  posts: Post[];
  showAll?: boolean;
}


const { posts, showAll = false } = Astro.props;
---

  <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-300">
      <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
          <tr>
              <th scope="col" class="px-6 py-3">
                Title
              </th>
              <th scope="col" class="px-6 py-3">
                Status
              </th>
              <th scope="col" class="px-6 py-3">
                Created
              </th>
              <th scope="col" class="px-6 py-3">
                Actions
              </th>
          </tr>
      </thead>
    <tbody>
      {
        posts.map((post) => (
          <tr class="border-b hover:bg-skin-card-muted">
            <td class="px-6 py-4 font-medium">
              <a href={`/post/${post.slug}`} class="text-gray-100 hover:text-skin-accent">
                {post.title}
              </a>
              <p class="mt-1 text-xs text-gray-500">{post.slug}</p>
            </td>
            <td class="px-6 py-4">
              <span
                class={`rounded-md px-2.5 py-0.5 text-xs font-medium ${
                  post.published
                    ? 'bg-green-400 text-green-800'
                    : 'bg-yellow-300 text-yellow-800'
                }`}
              >
                {post.published ? 'Published' : 'Draft'}
              </span>
            </td>
            <td class="px-4 py-4">
              {new Date(post.created_at).toLocaleDateString()}
            </td>
            <td class="px-6 py-4">
              <div class="flex space-x-2">
                <a
                  href={`/admin/posts/${post.id}/edit`}
                  class="font-medium text-blue-600 hover:underline dark:text-blue-500"
                >
                  Edit
                </a>
                <button
                  data-post-id={post.id}
                  class="delete-post font-medium text-red-600 hover:underline dark:text-red-500"
                >
                  Delete
                </button>
              </div>
            </td>
          </tr>
        ))
      }
    </tbody>
  </table>
</div>

<script>
  // Handle delete functionality
  document.querySelectorAll('.delete-post').forEach(button => {
    button.addEventListener('click', async (e) => {
      const postId = (e.target as HTMLElement).dataset.postId;
      if (!confirm('Are you sure you want to delete this post?')) return;

      try {
        const response = await fetch(`/api/posts/${postId}`, {
          method: 'DELETE',
        });

        if (!response.ok) throw new Error('Failed to delete post');

        // Reload the page to show updated list
        window.location.reload();
      } catch (error) {
        console.error('Error deleting post:', error);
        alert('Failed to delete post');
      }
    });
  });
</script>