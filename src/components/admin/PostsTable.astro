---
// src/components/admin/PostsTable.astro
interface Props {
  posts: any[];
  showAll?: boolean;
}

const { posts, showAll = false } = Astro.props;

// Format date helper function
function formatDate(dateString: string) {
  return new Date(dateString).toLocaleDateString("en-US", {
    year: "numeric",
    month: "short",
    day: "numeric",
  });
}
---

<div class="overflow-x-auto">
  <table class="min-w-full divide-y divide-gray-200">
    <thead class="bg-gray-50">
      <tr>
        <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
          Title
        </th>
        <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
          Status
        </th>
        <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
          Created
        </th>
        <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">
          Actions
        </th>
      </tr>
    </thead>
    <tbody class="divide-y divide-gray-200 bg-white">
      {
        posts.map((post) => (
          <tr>
            <td class="whitespace-nowrap px-6 py-4">
              <div class="text-sm font-medium text-gray-900">{post.title}</div>
              <div class="text-sm text-gray-500">{post.slug}</div>
            </td>
            <td class="whitespace-nowrap px-6 py-4">
              <span
                class={`inline-flex rounded-full px-2 text-xs font-semibold leading-5 ${
                  post.published
                    ? "bg-green-100 text-green-800"
                    : "bg-yellow-100 text-yellow-800"
                }`}
              >
                {post.published ? "Published" : "Draft"}
              </span>
            </td>
            <td class="whitespace-nowrap px-6 py-4 text-sm text-gray-500">
              {new Date(post.created_at).toLocaleDateString()}
            </td>
            <td class="whitespace-nowrap px-6 py-4 text-sm font-medium">
              <div class="flex space-x-2">
                <a
                  href={`/admin/posts/${post.id}/edit`}
                  class="text-blue-600 hover:text-blue-900"
                >
                  Edit
                </a>
                <button
                  data-post-id={post.id}
                  class="delete-post text-red-600 hover:text-red-900"
                >
                  Delete
                </button>
              </div>
            </td>
          </tr>
        ))
      }
    </tbody>
  </table>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const deleteButtons = document.querySelectorAll(".delete-post");

    deleteButtons.forEach((button) => {
      button.addEventListener("click", async (e) => {
        const postId = (e.target as HTMLElement).dataset.postId;
        
        if (!postId) return;

        if (confirm("Are you sure you want to delete this post?")) {
          try {
            const response = await fetch(`/api/posts/${postId}`, {
              method: "DELETE",
            });

            const result = await response.json();

            if (!response.ok) {
              throw new Error(result.error || "Failed to delete post");
            }

            // Remove the table row or refresh the page
            const row = (e.target as HTMLElement).closest("tr");
            row?.remove();
          } catch (error) {
            console.error("Error deleting post:", error);
            if (error instanceof Error) {
              alert(error.message);
            } else {
              alert("An unknown error occurred");
            }
          }
        }
      });
    });
  });
</script>

<style>
  /* Optional: Add any custom styles here */
  .delete-btn {
    cursor: pointer;
  }
</style>
